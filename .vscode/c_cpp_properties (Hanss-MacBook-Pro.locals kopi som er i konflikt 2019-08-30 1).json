{
    "configurations": [
        {
            "name": "!!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags"
        },
        {
            "name": "Mac",
            "macFrameworkPath": [],
            "includePath": [
                "/Users/hans/Dropbox/ADV_SCRIPT/include",
                "/Users/hans/Dropbox/ADV_SCRIPT/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/cores/MightyCore",
                "/Users/hans/.platformio/packages/framework-arduinoavr/variants/mightycore_standard",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/AVR_examples/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/EEPROM/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Ethernet/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Optiboot_flasher/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SD/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SPI/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SPI1/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Servo/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SoftwareSerial/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Timer/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Wire/src",
                "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Wire1/src",
                "/Users/hans/.platformio/packages/tool-unity",
                ""
            ],
            "browse": {
                "limitSymbolsToIncludedHeaders": true,
                "path": [
                    "/Users/hans/Dropbox/ADV_SCRIPT/include",
                    "/Users/hans/Dropbox/ADV_SCRIPT/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/cores/MightyCore",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/variants/mightycore_standard",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/AVR_examples/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/EEPROM/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Ethernet/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Optiboot_flasher/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SD/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SPI/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SPI1/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Servo/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/SoftwareSerial/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Timer/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Wire/src",
                    "/Users/hans/.platformio/packages/framework-arduinoavr/libraries/__cores__/MightyCore/Wire1/src",
                    "/Users/hans/.platformio/packages/tool-unity",
                    ""
                ]
            },
            "defines": [
                "PLATFORMIO=40002",
                "ARDUINO_AVR_ATmega32",
                "F_CPU=1000000L",
                "ARDUINO_ARCH_AVR",
                "ARDUINO=10805",
                "__AVR_ATmega32__",
                ""
            ],
            "intelliSenseMode": "clang-x64",
            "cStandard": "c11",
            "cppStandard": "c++11",
            "compilerPath": "\"/Users/hans/.platformio/packages/toolchain-atmelavr/bin/avr-gcc\" -mmcu=atmega32"
        }
    ],
    "version": 4
}